Resources:
  RythmBinanceServiceTaskDefTaskRoleAF755383:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/TaskDef/TaskRole/Resource
  RythmBinanceServiceTaskDef84750B92:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - 919217319840.dkr.ecr.us-west-2.
                - Ref: AWS::URLSuffix
                - /rythm-binance-stream:SV_TESTING
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RythmBinanceServiceLogGroup2D2DC51A
              awslogs-stream-prefix: /ecs/rythm
              awslogs-region: us-west-2
          Name: Container
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - RythmBinanceServiceTaskDefExecutionRole38260343
          - Arn
      Family: RythmBinanceStreamStackRythmBinanceServiceTaskDef1C8E1510
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - RythmBinanceServiceTaskDefTaskRoleAF755383
          - Arn
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/TaskDef/Resource
  RythmBinanceServiceTaskDefExecutionRole38260343:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/TaskDef/ExecutionRole/Resource
  RythmBinanceServiceTaskDefExecutionRoleDefaultPolicyFA574E00:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ecr:us-west-2:919217319840:repository/rythm-binance-stream
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RythmBinanceServiceLogGroup2D2DC51A
                - Arn
        Version: "2012-10-17"
      PolicyName: RythmBinanceServiceTaskDefExecutionRoleDefaultPolicyFA574E00
      Roles:
        - Ref: RythmBinanceServiceTaskDefExecutionRole38260343
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/TaskDef/ExecutionRole/DefaultPolicy/Resource
  RythmBinanceServiceLogGroup2D2DC51A:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: rythm-binance-stream-lg
      RetentionInDays: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/LogGroup/Resource
  RythmBinanceServiceClusterD3EF7DBA:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: rythm-binance-stream-cluster
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/Cluster/Resource
  RythmBinanceServiceSecurityGroupE0E78333:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RythmBinanceStreamStack/RythmBinanceService/SecurityGroup
      GroupName: rythm-binance-stream-sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: vpc-0bd9057af61f4605d
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/SecurityGroup/Resource
  RythmBinanceServiceFargateService9D6E4D8F:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: RythmBinanceServiceClusterD3EF7DBA
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - RythmBinanceServiceFargateServiceSecurityGroup341A2715
                - GroupId
          Subnets:
            - subnet-0271f35307e83d88d
            - subnet-04cc089da26dd75fb
      ServiceName: rythm-binance-stream-fargate
      TaskDefinition:
        Ref: RythmBinanceServiceTaskDef84750B92
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/FargateService/Service
  RythmBinanceServiceFargateServiceSecurityGroup341A2715:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RythmBinanceStreamStack/RythmBinanceService/FargateService/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: vpc-0bd9057af61f4605d
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/RythmBinanceService/FargateService/SecurityGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11Py27CMBD8Fu7OQiIOnGnVXnqoAnfkmiVaYrxo1wZFUf69No+q7WlmZ0aanQYWsKjEQbOc2atWbt9Xnr5g3ETretOichKHJnu7EZ3CuLXav+KBAkXiYF4O4b/CIVoKKL81nzSilPSTvlnpbMQNyoVyQXYedDJkTzC27G/qDT/ZkxvKeWeT8dzlZz64exdO5+I8+WTQNXkAuiQUhx//j1BCAi2eWSmyDGurubjUPRZPJvAe4ajzS72EegX17KhElaQQ6YTQ3vEb/EiirEABAAA=
    Metadata:
      aws:cdk:path: RythmBinanceStreamStack/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

